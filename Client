import javax.swing.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;

/**
 * Client.java
 *
 * @author Ritu Atreyas and Samhitha Mupharaphu
 * @version 12/13/2021
 */

public class Client {
    // create a new object to pass through the synchronized blocks
    private final static Object lock = new Object();

    public static synchronized void connectClient() throws IOException {
        String hostName = JOptionPane.showInputDialog(null, "Enter the host name.",
                "localhost");
        if (hostName == null || hostName.trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "You did not input a name!",
                    "Card", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String port = JOptionPane.showInputDialog(null, "Enter the port number.",
                "8081");
        int portNo = 0;
        if (port == null || port.trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "You did not enter anything!",
                    "Card", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            try {
                portNo = Integer.parseInt(port);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "You did not enter a number!", "Card",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        try {
            boolean toContinue = true;
            while (toContinue) {
                //makes sure that data is stored concurrently and in the correct order if two users are accessing at same time
                synchronized (lock) {
                    Socket socket = new Socket(hostName, portNo);
                    BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                    PrintWriter writer = new PrintWriter(socket.getOutputStream());
                    String str = new String("");
                    boolean success = false;
                    while (!success) {
                        str = JOptionPane.showInputDialog(null, """
                                        What would you like to do?
                                        1. Create Student account.
                                        2. Create Teacher account.
                                        3. Edit Student account.
                                        4. Edit Teacher account.
                                        5. Delete Student account.
                                        6. Delete Teacher account.
                                        7. Sign in (Student account).
                                        8. Sign in (Teacher account).""",
                                "Statistics Card", JOptionPane.QUESTION_MESSAGE);
                        if (str == null || str.trim().length() == 0) {
                            JOptionPane.showMessageDialog(null, "You did not input anything!",
                                    "Statistics Card", JOptionPane.ERROR_MESSAGE);
                        } else {
                            success = true;
                        }
                    }

                    writer.write(str);
                    writer.println();
                    writer.flush();

                    if (str.equals("7") || str.equals("8")) {
                        writer.close();
                        reader.close();
                        break;

                    }
                    String shouldContinue = JOptionPane.showInputDialog(null, "Do you want to continue?",
                            "Continue?", JOptionPane.QUESTION_MESSAGE);
                    if (shouldContinue == null || shouldContinue.equalsIgnoreCase("yes")) {
                    } else {
                        toContinue = false;
                        writer.close();
                        reader.close();
                    }
                }
            }
        } catch (UnknownHostException e) {
            JOptionPane.showMessageDialog(null, "Unable to connect!",
                    "Statistics Card", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public static void main(String[] args) {
        JOptionPane.showMessageDialog(null, "Welcome!", "Card",
                JOptionPane.INFORMATION_MESSAGE);
        try {
            connectClient();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Unable to connect!",
                    "Statistics Card", JOptionPane.ERROR_MESSAGE);
        }
    }
}
